name: Deploy to production

on:
  push:
    branches: [ master ]

jobs:

  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code 
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: load secrets and save to production.yaml
      run:  |
        aws secretsmanager get-secret-value --secret-id bank --query SecretString --output text | jq -r '
        . |
        "server:\n  host: \(.Server_Address | split(\":\")[0])\n  port: \(.Server_Address | split(\":\")[1])\n" +
        "db:\n  username: root\n  password: password\n  host: \(.DB_Source | capture(\"@(?<host>[^:]+):\") | .host)\n  port: 5432\n  name: bank\n  sslmode: disable\n" +
        "token:\n  symmetric: \(.Symmetric)\n  access_token_duration: \(.Access_Token_Duration)"' > environment/production.yaml
    
    

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: go-bank
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
 